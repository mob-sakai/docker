name: Build All

on:
  workflow_dispatch:

jobs:
  build:
    name: "Build base and hub"
    runs-on: ubuntu-18.04
    steps:
      ###########################
      #     Load .env (main)    #
      ###########################
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Load .env
        run: cat .github/workflows/.env | sed 's/=\" *$/<<EOD/g' | sed 's/^\"/EOD/g' | grep '^[^# ]' >> $GITHUB_ENV

      ###########################
      #     Checkout latest     #
      ###########################
      - uses: pozetroninc/github-action-get-latest-release@master
        id: latest
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.latest.outputs.release }}

      ###########################
      #          Setup          #
      ###########################
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ steps.latest.outputs.release }}
          restore-keys: |
            ${{ runner.os }}-
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker-meta
        with:
          images: dummy

      ###########################
      #  Build and push (Base)  #
      ###########################
      - name: Check (Base)
        id: base_check
        run: |
          # If the image tag already exists, skip the build
          [ `skopeo list-tags docker://${{ env.BASE_IMAGE }} | jq -r '.Tags[]' | grep -x '${{ steps.latest.outputs.release }}'` ] && echo "::set-output name=skip::true" || :
      - name: Build and push (Base)
        if: steps.base_check.outputs.skip != 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: base/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          labels: ${{ steps.docker-meta.output.labels }}
          tags: ${{ env.BASE_IMAGE }}:${{ steps.latest.outputs.release }}

      ###########################
      #  Build and push (Hub)   #
      ###########################
      - name: Check (Hub)
        id: hub_check
        run: |
          # If the image tag already exists, skip the build
          [ `skopeo list-tags docker://${{ env.HUB_IMAGE }} | jq -r '.Tags[]' | grep -x '${{ steps.latest.outputs.release }}'` ] && echo "::set-output name=skip::true" || :
      - name: Build and push (Hub)
        if: steps.hub_check.outputs.skip != 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: hub/Dockerfile
          build-args: baseImage=${{ env.BASE_IMAGE }}:${{ steps.latest.outputs.release }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          labels: ${{ steps.docker-meta.output.labels }}
          tags: ${{ env.HUB_IMAGE }}:${{ steps.latest.outputs.release }}

  ###########################
  #  Dispatch build editor  #
  ###########################
  dispatch-build-eitor:
    name: "ðŸš€ Dispatch 'Build Editor' (${{ matrix.module }})"
    needs: build
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        module:
          [base, linux-il2cpp, windows-mono, mac-mono, ios, android, webgl]
    steps:
      ###########################
      #     Load .env (main)    #
      ###########################
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Load .env
        run: cat .github/workflows/.env | sed 's/=\" *$/<<EOD/g' | sed 's/^\"/EOD/g' | grep '^[^# ]' >> $GITHUB_ENV

      ###########################
      #   Setup build matrix    #
      ###########################
      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: pozetroninc/github-action-get-latest-release@master
        id: latest
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - name: Setup build matrix
        id: setup
        run: |
          # If all the combination tags to be built are existed in the registry: steps.setup.outputs.skip=true
          .github/workflows/scripts/setup_build_matrix.sh ${{ matrix.module }} ${{ steps.latest.outputs.release }}

      ###########################
      #  Dispatch build editor  #
      ###########################
      - name: "ðŸš€ Dispatch 'Build Editor Module'"
        if: steps.setup.outputs.skip != 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Build Editor Module
          token: ${{ secrets.GH_WORKFLOW_TOKEN }}
          inputs: '{ "module": "${{ matrix.module }}" }'
