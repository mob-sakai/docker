# [Required secrets]
#   DOCKERHUB_PASSWORD: DockerHub password to login
name: Build Editor

on:
  workflow_dispatch:
    inputs:
      versions:
        description: "Unity versions to build (json array)"
        required: true
        default: '[ "2018.4.30f1", "2019.4.30f1" ]'
      module:
        description: "Unity module to build.\n(base|linux-il2cpp|windows-mono|mac-mono|ios|android|webgl)"
        required: true
        default: "base"
      tag:
        description: "Release tag"
        required: true
        default: "v1.0.0"

env:
  DOCKERHUB_USERNAME: mobsakai # DockerHub user name
  # DOCKERHUB_PASSWORD=********       # from repository secret
  BASE_IMAGE: mobsakai/unity_base # Base image ID
  HUB_IMAGE: mobsakai/unity_hub # Hub image ID
  EDITOR_IMAGE: mobsakai/unity_editor # Editor image ID

jobs:
  build:
    name: Build ${{ matrix.version }} ${{ github.event.inputs.module }}
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(github.event.inputs.versions) }}
    steps:
      ###########################
      #          Setup          #
      ###########################
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}
      - uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Setup
        run: |
          # If the image tag already exists, skip the build
          IMAGE_TAG="${{ matrix.version }}-${{ github.event.inputs.module }}-${{ github.event.inputs.tag }}"
          [ `skopeo list-tags docker://$EDITOR_IMAGE || echo '' | jq -r '.Tags[]' | grep -x "$IMAGE_TAG"` ] && exit 1 || :

          # The Changeset for unity version
          echo "CHANGESET=`npx unity-changeset ${{ matrix.version }}`" >> $GITHUB_ENV

          # Free disk space
          .github/workflows/scripts/free_disk_space.sh

      ###########################
      # Build and push (Editor) #
      ###########################
      - name: Build
        # if: steps.build-1.outcome == 'failure'
        uses: docker/build-push-action@v2
        id: build-1
        continue-on-error: true
        timeout-minutes: 30
        with:
          context: .
          file: editor/Dockerfile
          build-args: |
            baseImage=${{ env.BASE_IMAGE }}:${{ github.event.inputs.tag }}
            hubImage=${{ env.HUB_IMAGE }}:${{ github.event.inputs.tag }}
            version=${{ matrix.version }}
            changeSet=${{ env.CHANGESET }}
            module=${{ github.event.inputs.module }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: |
            ${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ github.event.inputs.module }}-${{ github.event.inputs.tag }}
            ${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ github.event.inputs.module }}

      ###########################
      #          Retry          #
      ###########################
      - name: Sleep for retry
        if: steps.build-1.outcome == 'failure'
        run: sleep 120

      - name: Build (Retry)
        if: steps.build-1.outcome == 'failure'
        uses: docker/build-push-action@v2
        id: build-2
        # continue-on-error: true
        timeout-minutes: 30
        with:
          context: .
          file: editor/Dockerfile
          build-args: |
            baseImage=${{ env.BASE_IMAGE }}:${{ github.event.inputs.tag }}
            hubImage=${{ env.HUB_IMAGE }}:${{ github.event.inputs.tag }}
            version=${{ matrix.version }}
            changeSet=${{ env.CHANGESET }}
            module=${{ github.event.inputs.module }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: |
            ${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ github.event.inputs.module }}-${{ github.event.inputs.tag }}
            ${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ github.event.inputs.module }}

      ###########################
      #          Retry          #
      ###########################
      - name: Sleep for retry
        if: steps.build-2.outcome == 'failure'
        run: sleep 120

      - name: Build (Retry)
        if: steps.build-2.outcome == 'failure'
        uses: docker/build-push-action@v2
        id: build-3
        # continue-on-error: true
        timeout-minutes: 30
        with:
          context: .
          file: editor/Dockerfile
          build-args: |
            baseImage=${{ env.BASE_IMAGE }}:${{ github.event.inputs.tag }}
            hubImage=${{ env.HUB_IMAGE }}:${{ github.event.inputs.tag }}
            version=${{ matrix.version }}
            changeSet=${{ env.CHANGESET }}
            module=${{ github.event.inputs.module }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: |
            ${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ github.event.inputs.module }}-${{ github.event.inputs.tag }}
            ${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ github.event.inputs.module }}
