# [Required secrets]
#   DOCKERHUB_PASSWORD: DockerHub password to login
name: Build Editor

on:
  workflow_dispatch:
    inputs:
      versions:
        description: "Unity versions to build (json array)"
        required: true
        default: '[ "2018.4.30f1", "2019.4.30f1" ]'
      module:
        description: "An Unity module to build.\n(base|linux-il2cpp|windows-mono|mac-mono|ios|android|webgl)"
        required: true
        default: "base"
      tag:
        description: "Release tag"
        required: true
        default: "v1.0.0"
      dry-run:
        description: "Skip image build and push"
        required: true
        default: "true"

env:
  DOCKERHUB_USERNAME: mobsakai # DockerHub user name
  # DOCKERHUB_PASSWORD=********       # from repository secret
  BASE_IMAGE: mobsakai/unity_base # Base image ID
  HUB_IMAGE: mobsakai/unity_hub # Hub image ID
  EDITOR_IMAGE: mobsakai/unity_editor # Editor image ID

jobs:
  build:
    name: Build ${{ matrix.version }} ${{ github.event.inputs.module }}
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        version: ${{ fromJson(github.event.inputs.versions) }}
        module:
          - ${{ github.event.inputs.module }}
    steps:
      ###########################
      #          Setup          #
      ###########################
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.tag }}
      - uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Setup
        run: |
          RELEASE_TAG=${{ steps.latest.outputs.release }}
          MAJOR=`echo $RELEASE_TAG | tr -d 'v' | cut -d '.' -f 1`
          MINOR=`echo $RELEASE_TAG | tr -d 'v' | cut -d '.' -f 2`
          PATCH=`echo $RELEASE_TAG | tr -d 'v' | cut -d '.' -f 3`

          REPO_VERSION_FULL=${MAJOR:-0}.${MINOR:-0}.${PATCH:-0}
          REPO_VERSION_MINOR=${MAJOR:-0}.${MINOR:-0}
          REPO_VERSION_MAJOR=${MAJOR:-0}

          # If the image tag already exists, skip the build
          [ `skopeo list-tags docker://$EDITOR_IMAGE || echo '' | jq -r '.Tags[]' | grep -x "${{ matrix.version }}-${{ matrix.module }}-${ REPO_VERSION_FULL }"` ] && exit 1 || :

          # The Changeset for unity version
          changeSet=`npx unity-changeset ${{ matrix.version }}`

          echo BUILD_ARGS=\""`{
            echo "baseImage=${{ env.BASE_IMAGE }}:${ REPO_VERSION_FULL }" ;
            echo "hubImage=${{ env.HUB_IMAGE }}:${ REPO_VERSION_FULL }" ;
            echo "version=${{ matrix.version }}" ;
            echo "changeSet=$changeSet" ;
            echo "module=${{ matrix.module }}" ;
          }`"\" >> $GITHUB_ENV

          echo TAGS=\""`{
            echo "${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ matrix.module }}-${ REPO_VERSION_FULL }" ;
            echo "${{ env.EDITOR_IMAGE }}:ubuntu-${{ matrix.version }}-${{ matrix.module }}-${ REPO_VERSION_FULL }" ;
            echo "${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ matrix.module }}-${ REPO_VERSION_MINOR }" ;
            echo "${{ env.EDITOR_IMAGE }}:ubuntu-${{ matrix.version }}-${{ matrix.module }}-${ REPO_VERSION_MINOR }" ;
            echo "${{ env.EDITOR_IMAGE }}:${{ matrix.version }}-${{ matrix.module }}-${ REPO_VERSION_MAJOR }" ;
            echo "${{ env.EDITOR_IMAGE }}:ubuntu-${{ matrix.version }}-${{ matrix.module }}-${ REPO_VERSION_MAJOR }" ;
          }`"\" >> $GITHUB_ENV

          # Free disk space
          .github/workflows/scripts/free_disk_space.sh

      ###########################
      # Build and push (Editor) #
      ###########################
      - name: Build
        timeout-minutes: 30
        with:
          context: .
          file: editor/Dockerfile
          build-args: ${{ env.BUILD_ARGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          tags: ${{ env.TAGS }}
