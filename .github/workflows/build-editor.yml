# NOTE: Cache limitation is 5 GB per repo, and 7 days.
#       Do not cache each version because it is too small to install Unity.
name: Build Editor Module

on:
  workflow_dispatch:
    inputs:
      module:
        description: "Unity module to build.\n(base|linux-il2cpp|windows-mono|mac-mono|ios|android|webgl)"
        required: true

jobs:
  ###########################
  #           Setup         #
  ###########################
  setup:
    name: Setup build matrix (${{ github.event.inputs.module }})
    runs-on: ubuntu-18.04
    outputs:
      matrix: ${{ steps.setup.outputs.matrix }}
      skip: ${{ steps.setup.outputs.skip }}
    steps:
      ###########################
      #     Load .env (main)    #
      ###########################
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Load .env
        run: cat .github/workflows/.env | sed 's/=\" *$/<<EOD/g' | sed 's/^\"/EOD/g' | grep '^[^# ]' >> $GITHUB_ENV

      ###########################
      #   Setup build matrix    #
      ###########################
      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - uses: pozetroninc/github-action-get-latest-release@master
        id: latest
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - name: Setup build matrix
        id: setup
        run: |
          # If all the combination tags to be built are existed in the registry: steps.setup.outputs.skip=true
          .github/workflows/scripts/setup_build_matrix.sh ${{ github.event.inputs.module }} ${{ steps.latest.outputs.release }}

  ###########################
  #       Build editor      #
  ###########################
  build:
    name: Build ${{ matrix.version }} ${{ matrix.module }}
    if: needs.setup.outputs.skip != 'true'
    needs: setup
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
      # The matrix is expanded like this:
      # matrix:
      #   module:
      #     - base
      #   version:
      #     - 2018.3.1f1
      #     - 2018.3.2f1
      #     ...
    steps:
      ###########################
      #     Load .env (main)    #
      ###########################
      - uses: actions/checkout@v2
        with:
          ref: main
      - name: Load .env
        run: cat .github/workflows/.env | sed 's/=\" *$/<<EOD/g' | sed 's/^\"/EOD/g' | grep '^[^# ]' >> $GITHUB_ENV

      ###########################
      #     Checkout latest     #
      ###########################
      - uses: pozetroninc/github-action-get-latest-release@master
        id: latest
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft
      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.latest.outputs.release }}

      ###########################
      #          Setup          #
      ###########################
      - uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Check
        run: |
          # If the image tag already exists, skip the build
          [ `skopeo list-tags docker://${{ env.EDITOR_IMAGE }} | jq -r '.Tags[]' | grep -x '${{ matrix.version }}-${{ matrix.module }}-${{ steps.latest.outputs.release }}'` ] && exit 1 || :
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Setup to build
        run: |
          # Changeset for unity version
          echo "CHANGESET=`npx unity-changeset ${{ matrix.version }}`" >> $GITHUB_ENV

          # Dockerfile to build
          echo "DOCKER_FILE=editor/Dockerfile" >> $GITHUB_ENV

      - name: Free disk space
        run: .github/workflows/scripts/free_disk_space.sh

      ###########################
      # Build and push (Editor) #
      ###########################
      - uses: crazy-max/ghaction-docker-meta@v1
        id: docker
        with:
          images: ${{ env.EDITOR_IMAGE }}
          tag-custom-only: true
          tag-custom: |
            ${{ matrix.version }}-${{ matrix.module }}-${{ steps.latest.outputs.release }}
            ${{ matrix.version }}-${{ matrix.module }}

      - name: Build
        # if: steps.build-1.outcome == 'failure'
        uses: docker/build-push-action@v2
        id: build-1
        continue-on-error: true
        timeout-minutes: 40
        with:
          context: .
          file: ${{ env.DOCKER_FILE }}
          build-args: |
            baseImage=${{ env.BASE_IMAGE }}:${{ steps.latest.outputs.release }}
            hubImage=${{ env.HUB_IMAGE }}:${{ steps.latest.outputs.release }}
            version=${{ matrix.version }}
            changeSet=${{ env.CHANGESET }}
            module=${{ matrix.module }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          labels: ${{ steps.docker.outputs.labels }}
          tags: ${{ steps.docker.outputs.tags }}

      ###########################
      #          Retry          #
      ###########################
      - name: Sleep for retry
        if: steps.build-1.outcome == 'failure'
        run: sleep 120

      - name: Build (Retry)
        if: steps.build-1.outcome == 'failure'
        uses: docker/build-push-action@v2
        id: build-2
        # continue-on-error: true
        timeout-minutes: 40
        with:
          context: .
          file: ${{ env.DOCKER_FILE }}
          build-args: |
            baseImage=${{ env.BASE_IMAGE }}:${{ steps.latest.outputs.release }}
            hubImage=${{ env.HUB_IMAGE }}:${{ steps.latest.outputs.release }}
            version=${{ matrix.version }}
            changeSet=${{ env.CHANGESET }}
            module=${{ matrix.module }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: true
          labels: ${{ steps.docker.outputs.labels }}
          tags: ${{ steps.docker.outputs.tags }}
